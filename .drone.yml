---
kind: pipeline
name: build
clone:
  depth: 1
volumes:
- name: gopath
  temp: {}
steps:
- name: durl
  image: quay.io/suzuki_shunsuke/durl:1.0.0@sha256:2753542727d8e68a823dece28f60bc0bae7d0ebac291e3563939802ff2bef6c0
  commands:
  - sh scripts/durl.sh
- name: download go modules
  image: golang:1.23.5@sha256:51a6466e8dbf3e00e422eb0f7a97ac450b2d57b33617bbe8d2ee0bddcd9d0d37
  commands:
  - go mod download
  volumes: &volumes
  - name: gopath
    path: /go
- name: golangci-lint
  image: golangci/golangci-lint:v1.63.4-alpine@sha256:e1768ec667a10f7712d38abc484d18660d8c32caf3a252b8531ea77ff09de575
  commands:
  - golangci-lint run
  volumes: *volumes
- name: benchmark
  image: golang:1.23.5@sha256:51a6466e8dbf3e00e422eb0f7a97ac450b2d57b33617bbe8d2ee0bddcd9d0d37
  commands:
  - cd flute
  - go test -bench=. -benchmem
  volumes: *volumes
- name: codecov
  image: golang:1.23.5@sha256:51a6466e8dbf3e00e422eb0f7a97ac450b2d57b33617bbe8d2ee0bddcd9d0d37
  commands:
  # bash and cgo seem to be required
  - bash scripts/codecov-test.sh
  - curl -s https://codecov.io/bash > /tmp/codecov.sh
  - test "$LOCAL" = "true" -o "$DRONE_BUILD_EVENT" = "pull_request" || bash /tmp/codecov.sh
  volumes: *volumes
  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
